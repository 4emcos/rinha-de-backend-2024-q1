 Network rinha-nginx-2024q1  Creating
 Network rinha-nginx-2024q1  Created
 Container alcivanlucas-db-1  Creating
 Container alcivanlucas-db-1  Created
 Container alcivanlucas-api02-1  Creating
 Container alcivanlucas-api01-1  Creating
 Container alcivanlucas-api02-1  Created
 Container alcivanlucas-api01-1  Created
 Container alcivanlucas-nginx-1  Creating
 Container alcivanlucas-nginx-1  Created
Attaching to api01-1, api02-1, db-1, nginx-1
db-1     | The files belonging to this database system will be owned by user "postgres".
db-1     | This user must also own the server process.
db-1     | 
db-1     | The database cluster will be initialized with locale "en_US.utf8".
db-1     | The default database encoding has accordingly been set to "UTF8".
db-1     | The default text search configuration will be set to "english".
db-1     | 
db-1     | Data page checksums are disabled.
db-1     | 
db-1     | fixing permissions on existing directory /var/lib/postgresql/data ... ok
db-1     | creating subdirectories ... ok
db-1     | selecting dynamic shared memory implementation ... posix
db-1     | selecting default max_connections ... 100
db-1     | selecting default shared_buffers ... 128MB
nginx-1  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
nginx-1  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
nginx-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
db-1     | selecting default time zone ... Etc/UTC
db-1     | creating configuration files ... ok
nginx-1  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
nginx-1  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
nginx-1  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
nginx-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
nginx-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
nginx-1  | /docker-entrypoint.sh: Configuration complete; ready for start up
api02-1  | 
api02-1  | > alcivanlucas@1.0.0 dev
api02-1  | > tsx --watch ./api_node/api.ts
api02-1  | 
api01-1  | 
api01-1  | > alcivanlucas@1.0.0 dev
api01-1  | > tsx --watch ./api_node/api.ts
api01-1  | 
api02-1  | (node:29) ExperimentalWarning: Watch mode is an experimental feature and might change at any time
api02-1  | (Use `node --trace-warnings ...` to show where the warning was created)
api01-1  | (node:29) ExperimentalWarning: Watch mode is an experimental feature and might change at any time
api01-1  | (Use `node --trace-warnings ...` to show where the warning was created)
db-1     | running bootstrap script ... ok
api02-1  | Server is running on port 8080
api01-1  | Server is running on port 8080
api01-1  | id do cliente: 1 status 200
db-1     | performing post-bootstrap initialization ... ok
db-1     | syncing data to disk ... ok
db-1     | 
db-1     | 
db-1     | Success. You can now start the database server using:
db-1     | 
db-1     |     pg_ctl -D /var/lib/postgresql/data -l logfile start
db-1     | 
db-1     | initdb: warning: enabling "trust" authentication for local connections
db-1     | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
db-1     | waiting for server to start.... stopped waiting
db-1     | pg_ctl: could not start server
db-1     | Examine the log output.
api02-1  | id do cliente: 1 status 200
db-1 exited with code 1
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
api01-1  | id do cliente: 1 status 200
api02-1  | id do cliente: 1 status 200
nginx-1 exited with code 0
nginx-1 exited with code 0
api01-1 exited with code 0
api01-1 exited with code 137
api02-1 exited with code 0
